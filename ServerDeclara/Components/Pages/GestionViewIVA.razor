@page "/gestionIVA"
@inject IVAServicio _ivaServicio

<CardIVAVista Titulo="Ventas">
    @if (Ventas != null && Ventas.Count > 0)
    {
        @foreach (var itemVenta in Ventas)
        {
            <ItemCardIVA entradaIVA="itemVenta" />
        }

    }
    else
    {
        <p>Todavia no tiene comprobante ingresado</p>
    }
</CardIVAVista>

<CardIVAVista Titulo="Compras">
    @if (Compras != null && Compras.Count > 0)
    {
        @foreach (var itemCompra in Compras)
        {
            <ItemCardIVA entradaIVA="itemCompra" />
        }

    }
    else
    {
        <p>Todavia no tiene comprobante ingresado</p>
    }
</CardIVAVista>

<CardIVAVista Titulo="Monto IVA a pagar">
    <p>IVA a pagar: $@bimensualIVA.AnticipoBimestreIVA</p>
</CardIVAVista>

<div class="botonMas" @onclick="IrNuevoComprobante">
    <img src="/imagenes/iconos/botonMas.png" alt="boton +" />
</div>

@code {
    int declaracionIVAId = 0;
    BimensualIVADTO bimensualIVA = new();

    List<EntradaIVADiarioDTO> Compras = new();
    List<EntradaIVADiarioDTO> Ventas = new();

    protected async override Task OnInitializedAsync()
    {
        declaracionIVAId = _ivaServicio.GetIdBimensual();
        await Actualizar();
    }

    private async Task Actualizar()
    {
        bimensualIVA = await _ivaServicio.ObtenerDeclaracion();

        Compras = bimensualIVA.EntradasIVADiarios.Where(w => w.TipoIva == Util.TipoIva.COMPRA.ToString()).ToList();
        Ventas = bimensualIVA.EntradasIVADiarios.Where(w => w.TipoIva == Util.TipoIva.VENTA.ToString()).ToList();
    }


    private void IrNuevoComprobante(MouseEventArgs e)
    {
        throw new NotImplementedException();
    }
}
