

<div class="selectorTipoIva mb-4" >
    @if (valor == Util.TipoIva.COMPRA.ToString())
    {
        <button @onclick="() => CambioValor(Util.TipoIva.COMPRA.ToString())" class="grupo_boton_seleccionado">COMPRA</button>
    }
    else{
        <button @onclick="() => CambioValor(Util.TipoIva.COMPRA.ToString())" class="colorBlanco">COMPRA</button>
    }

    @if (valor == Util.TipoIva.VENTA.ToString())
    {
        <button @onclick="() => CambioValor(Util.TipoIva.VENTA.ToString())" class="grupo_boton_seleccionado">VENTA</button>
    }
    else{
        <button @onclick="() => CambioValor(Util.TipoIva.VENTA.ToString())" class="colorBlanco">VENTA</button>
    }
   

</div>



@code {
    [Parameter] public string valor { get; set; }

    [Parameter] public EventCallback<string> CambioValorTipoIva { get; set; }

    async Task CambioValor(string valor)
    {
        await CambioValorTipoIva.InvokeAsync(valor);
    }

}


@* 

<p>@Titulo</p>
<div class="d-flex justify-content-between">
    <input type="number" step="0.1" placeholder="Mes1" class="form-control" @bind-value="ValorMes1" />
    <input type="number" step="0.1" placeholder="Mes2" class="form-control" @bind-value="ValorMes2" />
</div>



@code {
    [Parameter] public string Titulo { get; set; }
    [Parameter] public string ValorMes1 { get; set; }
    [Parameter] public string ValorMes2 { get; set; }
    [Parameter] public EventCallback<(string, double)> CambioValor { get; set; }

    async Task CambioValorMes1()
    {

    }

}
 *@