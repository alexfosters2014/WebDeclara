@inject IConfiguration _config

<section class="row item-iva justify-content-center">
    <article class="col-5 d-flex flex-column align-items-center justify-content-center p-0">
        <p class="fuente-pequeña">@entradaIVA.Fecha.ToString("dd/MM/yyyy")</p>
        <p>@NombreEmpresa()</p>
    </article>

    <article class="col-4 d-flex align-items-center justify-content-start p-0">
        <table>
            <tr>
                <td>Monto: </td>
                <td>$@entradaIVA.MontoMasIVA</td>
            </tr>
            <tr>
                <td>IVA: </td>
                <td>$@entradaIVA.MontoIVA</td>
            </tr>
            @if (entradaIVA.MontoIvaRetenido > 0)
            {
                <tr>
                    <td>IVA ret: </td>
                    <td>$@entradaIVA.MontoIvaRetenido</td>
                </tr>
            }
           
        </table>
    </article>

    <article class="col-3 d-flex flex-column align-items-center justify-content-start p-2">
        <p>@entradaIVA.Comprobante</p>
        <a href="@ObtenerURL()">
            <img src="/imagenes/iconos/ojo.png" alt="" class="verPDF">
        </a>
    </article>
</section>

@code {
    [Parameter] public EntradaIVADiarioDTO entradaIVA { get; set; }
    [CascadingParameter] IModalService Modal { get; set; } = default!;

    string urlPDF = "";

    protected async override Task OnInitializedAsync()
    {
        urlPDF = _config["AzureBlobStorage:UrlVisorPDF"];
    }

    private string NombreEmpresa(){
        string razonSocial = entradaIVA.Comercio.RazonSocial.Length > 25 ? 
                                                entradaIVA.Comercio.RazonSocial.Substring(0,25) + "..." : 
                                                entradaIVA.Comercio.RazonSocial;

        return razonSocial;
    }

    private string ObtenerURL()
    {
        string verURL = urlPDF + entradaIVA.NombreArchivoPDF;
        return verURL;
    }

}
