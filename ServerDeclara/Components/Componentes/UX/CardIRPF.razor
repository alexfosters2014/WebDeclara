@using System.Globalization
@using System.Reflection
@inject NavigationManager _nav
@inject IRPFServicio _irpfServicio


<section class="card-general">
    <article>
         @FormatearPeriodo()
    </article>
    <p class="@ColorAnticipo()">
        @TextoAnticipo()
    </p>
    <div class="d-flex  justify-content-end card-general-submenu">
        <a href="" @onclick="() => EditarCambiosDeclaracion(DeclaracionBimensual.Id)" @onclick:preventDefault>
            <img src="/imagenes/iconos/editar.png" alt="">
        </a>
    </div>

    <div class="d-flex  justify-content-end card-general-submenu-2">
        <a href="" @onclick="() => CrearCopia(DeclaracionBimensual.Id)" @onclick:preventDefault>
            <img src="/imagenes/iconos/copiar.png" alt="">
        </a>
    </div>
</section>



@code {
    [Parameter] public BimensualIRPF_ViewList DeclaracionBimensual { get; set; }
    [CascadingParameter] IModalService Modal { get; set; } = default!;

    private string FormatearPeriodo()
    {
        var formatoFechaEspanol = DateTimeFormatInfo.GetInstance(new System.Globalization.CultureInfo("es-ES"));

        string fechaDesde = DeclaracionBimensual.Desde.ToString("MMMM", formatoFechaEspanol);
        string fechaHasta = DeclaracionBimensual.Hasta.ToString("MMMM", formatoFechaEspanol);
        string anio = DeclaracionBimensual.Desde.ToString("yyyy");

        return fechaDesde + "-" + fechaHasta + " " + anio;
    }

    private string TextoAnticipo()
    {
        string texto = DeclaracionBimensual.AnticipoBimestre >= 0 ? "Anticipo a pagar " : "Excedente a favor ";
        return texto + "$ " + DeclaracionBimensual.AnticipoBimestre;
    }

    private string ColorAnticipo() => DeclaracionBimensual.AnticipoBimestre >= 0 ? "color-rojo" : "color-verde";


    private void EditarCambiosDeclaracion(int idBimensual)
    {
        _irpfServicio.SetIdBimensual(idBimensual);
        _nav.NavigateTo("/NuevoIRPF/" + Util.modoFormulario.EDICION.ToString());
    }

    private async Task CrearCopia(int idBimensual)
    {
        var parametros = new ModalParameters();
        parametros.Add(nameof(DialogoConfirmacion.Texto), "Desea crear una copia de esta declaración?");

        var dialogo = Modal.Show<DialogoConfirmacion>("Copia", parametros);

         var result = await dialogo.Result;

            if (result.Confirmed)
            {
                _irpfServicio.SetIdBimensual(idBimensual);
                _nav.NavigateTo("/NuevoIRPF/" + Util.modoFormulario.COPIA.ToString());

            }
       
    }

}
